diff --git a/composer.json b/composer.json
index 2baa01c..81ea476 100644
--- a/composer.json
+++ b/composer.json
@@ -14,9 +14,6 @@
     "source": "https://git.drupalcode.org/project/google_analytics"
   },
   "license": "GPL-2.0-or-later",
-  "require": {
-    "drupal/core": "^8.9|^9.0"
-  },
   "require-dev": {
     "drupal/token": "^1.7"
   },
diff --git a/google_analytics.info.yml b/google_analytics.info.yml
index d5eb238..33f26c9 100644
--- a/google_analytics.info.yml
+++ b/google_analytics.info.yml
@@ -2,7 +2,7 @@ name: 'Google Analytics'
 type: module
 description: 'Allows your site to be tracked by Google Analytics by adding a Javascript tracking code to every page.'
 package: Statistics
-core_version_requirement: ^8.9 || ^9
+core_version_requirement: '>=9.3 <11'
 configure: google_analytics.admin_settings_form
 dependencies:
   - drupal:path_alias
\ No newline at end of file
diff --git a/google_analytics.module b/google_analytics.module
index fd9dd1b..40dfa60 100644
--- a/google_analytics.module
+++ b/google_analytics.module
@@ -170,7 +170,7 @@ function google_analytics_page_attachments(array &$page) {
 
       // Get the event_dispatcher service and dispatch the event.
       $event_dispatcher = \Drupal::service('event_dispatcher');
-      $event_dispatcher->dispatch(GoogleAnalyticsEvents::ADD_CONFIG, $ga_config);
+      $event_dispatcher->dispatch($ga_config, GoogleAnalyticsEvents::ADD_CONFIG);
 
       // Json::encode() cannot convert custom URLs properly.
       $config_array = $ga_config->getConfig();
@@ -195,7 +195,7 @@ function google_analytics_page_attachments(array &$page) {
 
     // Get the event_dispatcher service and dispatch the event.
     $event_dispatcher = \Drupal::service('event_dispatcher');
-    $event_dispatcher->dispatch(GoogleAnalyticsEvents::ADD_EVENT, $ga_events);
+    $event_dispatcher->dispatch($ga_events, GoogleAnalyticsEvents::ADD_EVENT);
 
     if (!empty($ga_events->getEvents())) {
       foreach ($ga_events->getEvents() as $event) {
diff --git a/google_analytics.services.yml b/google_analytics.services.yml
index f14dbd6..ee99517 100644
--- a/google_analytics.services.yml
+++ b/google_analytics.services.yml
@@ -7,7 +7,7 @@ services:
     arguments: [ '@config.factory', '@private_key' ]
   google_analytics.javascript_cache:
     class: Drupal\google_analytics\JavascriptLocalCache
-    arguments: [ '@http_client', '@file_system', '@config.factory', '@logger.factory', '@state' ]
+    arguments: [ '@http_client', '@file_system', '@config.factory', '@logger.factory', '@state', '@file_url_generator' ]
 
   # Google Analytics Event Subscribers
   google_analytics.events.messages:
diff --git a/src/Event/GoogleAnalyticsConfigEvent.php b/src/Event/GoogleAnalyticsConfigEvent.php
index 03be0c2..f808924 100644
--- a/src/Event/GoogleAnalyticsConfigEvent.php
+++ b/src/Event/GoogleAnalyticsConfigEvent.php
@@ -2,9 +2,8 @@
 
 namespace Drupal\google_analytics\Event;
 
+use Drupal\Component\EventDispatcher\Event;
 use Drupal\google_analytics\GaAccount;
-use Drupal\google_analytics\Helpers\GoogleAnalyticsAccounts;
-use Symfony\Component\EventDispatcher\Event;
 use Drupal\google_analytics\GaJavascriptObject;
 
 /**
diff --git a/src/Event/GoogleAnalyticsEventsEvent.php b/src/Event/GoogleAnalyticsEventsEvent.php
index 5de4e73..50804d5 100644
--- a/src/Event/GoogleAnalyticsEventsEvent.php
+++ b/src/Event/GoogleAnalyticsEventsEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\google_analytics\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Drupal\Component\EventDispatcher\Event;
 use Drupal\google_analytics\GaJavascriptObject;
 
 /**
diff --git a/src/Event/PagePathEvent.php b/src/Event/PagePathEvent.php
index ee1ac15..bc8c8ad 100644
--- a/src/Event/PagePathEvent.php
+++ b/src/Event/PagePathEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\google_analytics\Event;
 
-use Symfony\Component\EventDispatcher\Event;
+use Drupal\Component\EventDispatcher\Event;
 
 /**
  * Event that is fired when a user logs in.
diff --git a/src/EventSubscriber/GoogleAnalyticsConfig/DefaultConfig.php b/src/EventSubscriber/GoogleAnalyticsConfig/DefaultConfig.php
index dd94fab..5d04829 100644
--- a/src/EventSubscriber/GoogleAnalyticsConfig/DefaultConfig.php
+++ b/src/EventSubscriber/GoogleAnalyticsConfig/DefaultConfig.php
@@ -109,7 +109,7 @@ class DefaultConfig implements EventSubscriberInterface {
     $page_path = new PagePathEvent();
     // Get the event_dispatcher service and dispatch the event.
     $event_dispatcher = \Drupal::service('event_dispatcher');
-    $event_dispatcher->dispatch(GoogleAnalyticsEvents::PAGE_PATH, $page_path);
+    $event_dispatcher->dispatch($page_path, GoogleAnalyticsEvents::PAGE_PATH);
 
     $path_type = $ga_account->isUniversalAnalyticsAccount() ? 'page_path' : 'page_location';
     $arguments['page_placeholder'] = 'PLACEHOLDER_' . $path_type;
diff --git a/src/JavascriptLocalCache.php b/src/JavascriptLocalCache.php
index 0d72efe..cd194d9 100644
--- a/src/JavascriptLocalCache.php
+++ b/src/JavascriptLocalCache.php
@@ -5,6 +5,7 @@ namespace Drupal\google_analytics;
 use Drupal\Component\Utility\Crypt;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\File\FileSystemInterface;
+use Drupal\Core\File\FileUrlGeneratorInterface;
 use Drupal\Core\Logger\LoggerChannelFactoryInterface;
 use Drupal\Core\State\StateInterface;
 use GuzzleHttp\ClientInterface;
@@ -42,12 +43,18 @@ class JavascriptLocalCache {
    */
   protected $state;
 
-  public function __construct(ClientInterface $http_client, FileSystemInterface $file_system, ConfigFactoryInterface $config_factory, LoggerChannelFactoryInterface $logger_factory, StateInterface $state) {
+  /**
+   * @var \Drupal\Core\File\FileUrlGeneratorInterface
+   */
+  protected $fileUrlGenerator;
+
+  public function __construct(ClientInterface $http_client, FileSystemInterface $file_system, ConfigFactoryInterface $config_factory, LoggerChannelFactoryInterface $logger_factory, StateInterface $state, FileUrlGeneratorInterface $file_url_generator) {
     $this->httpClient = $http_client;
     $this->fileSystem = $file_system;
     $this->configFactory = $config_factory;
     $this->state = $state;
     $this->logger = $logger_factory->get('google_analytics');
+    $this->fileUrlGenerator = $file_url_generator;
   }
   /**
    * Download/Synchronize/Cache tracking code file locally.
@@ -117,7 +124,7 @@ class JavascriptLocalCache {
     }
     // Return the local JS file path.
     $query_string = '?' . (\Drupal::state()->get('system.css_js_query_string') ?: '0');
-    return file_url_transform_relative(file_create_url($file_destination)) . $query_string;
+    return $this->fileUrlGenerator->generateString($file_destination) . $query_string;
   }
 
   /**
diff --git a/src/Plugin/migrate/process/GoogleAnalyticsParameterPages.php b/src/Plugin/migrate/process/GoogleAnalyticsParameterPages.php
index e136284..6ae5fb1 100644
--- a/src/Plugin/migrate/process/GoogleAnalyticsParameterPages.php
+++ b/src/Plugin/migrate/process/GoogleAnalyticsParameterPages.php
@@ -69,7 +69,7 @@ class GoogleAnalyticsParameterPages extends ProcessPluginBase implements Contain
    * {@inheritdoc}
    */
   public function transform($value, MigrateExecutableInterface $migrate_executable, Row $row, $destination_property) {
-    list($dimensions, $metrics) = $value;
+    [$dimensions, $metrics] = $value;
     $return_array = [];
     foreach ($dimensions as $dimension) {
       $index = 'dimension' . $dimension['index'];
diff --git a/src/Plugin/migrate/process/GoogleAnalyticsVisibilityPages.php b/src/Plugin/migrate/process/GoogleAnalyticsVisibilityPages.php
index 23a26ab..45fe8bf 100644
--- a/src/Plugin/migrate/process/GoogleAnalyticsVisibilityPages.php
+++ b/src/Plugin/migrate/process/GoogleAnalyticsVisibilityPages.php
@@ -70,7 +70,7 @@ class GoogleAnalyticsVisibilityPages extends ProcessPluginBase implements Contai
    * {@inheritdoc}
    */
   public function transform($value, MigrateExecutableInterface $migrate_executable, Row $row, $destination_property) {
-    list($old_visibility, $pages) = $value;
+    [$old_visibility, $pages] = $value;
 
     $request_path_pages = '';
 
diff --git a/src/Plugin/migrate/process/GoogleAnalyticsVisibilityRoles.php b/src/Plugin/migrate/process/GoogleAnalyticsVisibilityRoles.php
index c6b4374..6884d9c 100644
--- a/src/Plugin/migrate/process/GoogleAnalyticsVisibilityRoles.php
+++ b/src/Plugin/migrate/process/GoogleAnalyticsVisibilityRoles.php
@@ -69,7 +69,7 @@ class GoogleAnalyticsVisibilityRoles extends ProcessPluginBase implements Contai
    * {@inheritdoc}
    */
   public function transform($value, MigrateExecutableInterface $migrate_executable, Row $row, $destination_property) {
-    list($roles) = $value;
+    [$roles] = $value;
 
     // Remove role IDs disabled in D6/D7.
     $roles = array_filter($roles);
diff --git a/tests/src/Functional/GoogleAnalyticsBasicTest.php b/tests/src/Functional/GoogleAnalyticsBasicTest.php
index 105f363..6befa5a 100644
--- a/tests/src/Functional/GoogleAnalyticsBasicTest.php
+++ b/tests/src/Functional/GoogleAnalyticsBasicTest.php
@@ -101,9 +101,9 @@ class GoogleAnalyticsBasicTest extends BrowserTestBase {
     $this->assertSession()->fieldExists('google_analytics_codesnippet_create');
     $this->assertSession()->fieldExists('google_analytics_codesnippet_before');
     $this->assertSession()->fieldExists('google_analytics_codesnippet_after');
-    $this->assertNoFieldByXPath("//textarea[@name='google_analytics_codesnippet_create' and @disabled='disabled']", NULL, '"Parameters" field is enabled.');
-    $this->assertNoFieldByXPath("//textarea[@name='google_analytics_codesnippet_before' and @disabled='disabled']", NULL, '"Code snippet (before)" is enabled.');
-    $this->assertNoFieldByXPath("//textarea[@name='google_analytics_codesnippet_after' and @disabled='disabled']", NULL, '"Code snippet (after)" is enabled.');
+    $this->assertEmpty($this->xpath("//textarea[@name='google_analytics_codesnippet_create' and @disabled='disabled']"), '"Parameters" field is enabled.');
+    $this->assertEmpty($this->xpath("//textarea[@name='google_analytics_codesnippet_before' and @disabled='disabled']"), '"Code snippet (before)" is enabled.');
+    $this->assertEmpty($this->xpath("//textarea[@name='google_analytics_codesnippet_after' and @disabled='disabled']"), '"Code snippet (after)" is enabled.');
 
     // Login as user without JS permissions.
     $this->drupalLogin($this->noSnippetUser);
@@ -113,9 +113,9 @@ class GoogleAnalyticsBasicTest extends BrowserTestBase {
     $this->assertSession()->fieldExists('google_analytics_codesnippet_create');
     $this->assertSession()->fieldExists('google_analytics_codesnippet_before');
     $this->assertSession()->fieldExists('google_analytics_codesnippet_after');
-    $this->assertNoFieldByXPath("//textarea[@name='google_analytics_codesnippet_create' and @disabled='disabled']", NULL, '"Parameters" field is enabled.');
-    $this->assertFieldByXPath("//textarea[@name='google_analytics_codesnippet_before' and @disabled='disabled']", NULL, '"Code snippet (before)" is disabled.');
-    $this->assertFieldByXPath("//textarea[@name='google_analytics_codesnippet_after' and @disabled='disabled']", NULL, '"Code snippet (after)" is disabled.');
+    $this->assertEmpty($this->xpath("//textarea[@name='google_analytics_codesnippet_create' and @disabled='disabled']"), '"Parameters" field is enabled.');
+    $this->assertNotEmpty($this->xpath("//textarea[@name='google_analytics_codesnippet_before' and @disabled='disabled']"), '"Code snippet (before)" is disabled.');
+    $this->assertNotEmpty($this->xpath("//textarea[@name='google_analytics_codesnippet_after' and @disabled='disabled']"), '"Code snippet (after)" is disabled.');
   }
 
   /**
diff --git a/tests/src/Functional/GoogleAnalyticsCustomDimensionsAndMetricsTest.php b/tests/src/Functional/GoogleAnalyticsCustomDimensionsAndMetricsTest.php
index 3625a2d..676227e 100644
--- a/tests/src/Functional/GoogleAnalyticsCustomDimensionsAndMetricsTest.php
+++ b/tests/src/Functional/GoogleAnalyticsCustomDimensionsAndMetricsTest.php
@@ -41,7 +41,7 @@ class GoogleAnalyticsCustomDimensionsAndMetricsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
@@ -160,7 +160,7 @@ class GoogleAnalyticsCustomDimensionsAndMetricsTest extends BrowserTestBase {
       ],
     ];
     $this->config('google_analytics.settings')->set('custom.parameters', $google_analytics_custom_dimension)->save();
-    $this->verbose('<pre>' . print_r($google_analytics_custom_dimension, TRUE) . '</pre>');
+    dump('<pre>' . print_r($google_analytics_custom_dimension, TRUE) . '</pre>');
 
     // Test on frontpage.
     $this->drupalGet('');
diff --git a/tests/src/Functional/GoogleAnalyticsCustomUrls.php b/tests/src/Functional/GoogleAnalyticsCustomUrls.php
index 9d2d3ec..448d7dc 100644
--- a/tests/src/Functional/GoogleAnalyticsCustomUrls.php
+++ b/tests/src/Functional/GoogleAnalyticsCustomUrls.php
@@ -36,7 +36,7 @@ class GoogleAnalyticsCustomUrls extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
diff --git a/tests/src/Functional/GoogleAnalyticsRolesTest.php b/tests/src/Functional/GoogleAnalyticsRolesTest.php
index 803375f..741e585 100644
--- a/tests/src/Functional/GoogleAnalyticsRolesTest.php
+++ b/tests/src/Functional/GoogleAnalyticsRolesTest.php
@@ -36,7 +36,7 @@ class GoogleAnalyticsRolesTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
diff --git a/tests/src/Functional/GoogleAnalyticsSearchTest.php b/tests/src/Functional/GoogleAnalyticsSearchTest.php
index 9d80cfb..c8806c0 100644
--- a/tests/src/Functional/GoogleAnalyticsSearchTest.php
+++ b/tests/src/Functional/GoogleAnalyticsSearchTest.php
@@ -2,7 +2,6 @@
 
 namespace Drupal\Tests\google_analytics\Functional;
 
-use Drupal\Component\Serialization\Json;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\search\SearchIndexInterface;
 use Drupal\Tests\BrowserTestBase;
@@ -15,7 +14,7 @@ use Drupal\Tests\BrowserTestBase;
 class GoogleAnalyticsSearchTest extends BrowserTestBase {
 
   use StringTranslationTrait;
-  
+
   /**
    * Modules to enable.
    *
@@ -40,7 +39,7 @@ class GoogleAnalyticsSearchTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->drupalCreateContentType(['type' => 'page', 'name' => 'Basic page']);
diff --git a/tests/src/Functional/GoogleAnalyticsStatusMessagesTest.php b/tests/src/Functional/GoogleAnalyticsStatusMessagesTest.php
index c009037..aa9b358 100644
--- a/tests/src/Functional/GoogleAnalyticsStatusMessagesTest.php
+++ b/tests/src/Functional/GoogleAnalyticsStatusMessagesTest.php
@@ -38,7 +38,7 @@ class GoogleAnalyticsStatusMessagesTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
diff --git a/tests/src/Functional/GoogleAnalyticsUninstallTest.php b/tests/src/Functional/GoogleAnalyticsUninstallTest.php
index 0e25299..8b9b00d 100644
--- a/tests/src/Functional/GoogleAnalyticsUninstallTest.php
+++ b/tests/src/Functional/GoogleAnalyticsUninstallTest.php
@@ -38,7 +38,7 @@ class GoogleAnalyticsUninstallTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
diff --git a/tests/src/Functional/GoogleAnalyticsUserFieldsTest.php b/tests/src/Functional/GoogleAnalyticsUserFieldsTest.php
index 2c14661..626a439 100644
--- a/tests/src/Functional/GoogleAnalyticsUserFieldsTest.php
+++ b/tests/src/Functional/GoogleAnalyticsUserFieldsTest.php
@@ -38,7 +38,7 @@ class GoogleAnalyticsUserFieldsTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
diff --git a/tests/src/FunctionalJavascript/GoogleAnalyticsFormValidationTest.php b/tests/src/FunctionalJavascript/GoogleAnalyticsFormValidationTest.php
index 5765257..504401f 100644
--- a/tests/src/FunctionalJavascript/GoogleAnalyticsFormValidationTest.php
+++ b/tests/src/FunctionalJavascript/GoogleAnalyticsFormValidationTest.php
@@ -36,7 +36,7 @@ class GoogleAnalyticsFormValidationTest extends WebDriverTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $permissions = [
diff --git a/tests/src/Kernel/Form/GoogleAnalyticsAdminSettingsFormTest.php b/tests/src/Kernel/Form/GoogleAnalyticsAdminSettingsFormTest.php
index 57a835d..e8c2e0e 100644
--- a/tests/src/Kernel/Form/GoogleAnalyticsAdminSettingsFormTest.php
+++ b/tests/src/Kernel/Form/GoogleAnalyticsAdminSettingsFormTest.php
@@ -37,7 +37,7 @@ class GoogleAnalyticsAdminSettingsFormTest extends KernelTestBase {
    *
    * @covers ::__construct
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->installConfig(static::$modules);
