diff --git a/src/Commands/StageFileProxyCommands.php b/src/Commands/StageFileProxyCommands.php
index 6561805fdc48a77350c2077a75bf9ec5c18b06ff..4bf94ee74c90ca9c7ca1fe03c1116e72b082f2d1 100644
--- a/src/Commands/StageFileProxyCommands.php
+++ b/src/Commands/StageFileProxyCommands.php
@@ -35,7 +35,7 @@ class StageFileProxyCommands extends DrushCommands {
    *
    * @var \Psr\Log\LoggerInterface
    */
-  protected $logger;
+  protected ?LoggerInterface $logger = NULL;
 
   /**
    * The module config.
diff --git a/src/EventDispatcher/AlterExcludedPathsEvent.php b/src/EventDispatcher/AlterExcludedPathsEvent.php
index 8e356f17d91d4f418a70850fa663008f119bfdfe..35f6e50e54853030f6ad6e16d076aeee4e424fb3 100644
--- a/src/EventDispatcher/AlterExcludedPathsEvent.php
+++ b/src/EventDispatcher/AlterExcludedPathsEvent.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\stage_file_proxy\EventDispatcher;
 
-use Symfony\Component\EventDispatcher\Event;
+use Drupal\Component\EventDispatcher\Event;
 
 /**
  * Class AlterExcludedPathsEvent.
diff --git a/src/EventSubscriber/ProxySubscriber.php b/src/EventSubscriber/ProxySubscriber.php
index 8be00c66647ce783ed9780f3c924a1af11ec5e19..4726fce9370e173a4105468c50bb48414f8bdf03 100644
--- a/src/EventSubscriber/ProxySubscriber.php
+++ b/src/EventSubscriber/ProxySubscriber.php
@@ -12,7 +12,7 @@ use Psr\Log\LoggerInterface;
 use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
 use Symfony\Component\HttpFoundation\RequestStack;
-use Symfony\Component\HttpKernel\Event\GetResponseEvent;
+use Symfony\Component\HttpKernel\Event\RequestEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
 /**
@@ -80,10 +80,10 @@ class ProxySubscriber implements EventSubscriberInterface {
   /**
    * Fetch the file from it's origin.
    *
-   * @param \Symfony\Component\HttpKernel\Event\GetResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\RequestEvent $event
    *   The event to process.
    */
-  public function checkFileOrigin(GetResponseEvent $event) {
+  public function checkFileOrigin(RequestEvent $event) {
     $config = $this->configFactory->get('stage_file_proxy.settings');
 
     // Get the origin server.
@@ -119,7 +119,7 @@ class ProxySubscriber implements EventSubscriberInterface {
     }
 
     $alter_excluded_paths_event = new AlterExcludedPathsEvent([]);
-    $this->eventDispatcher->dispatch('stage_file_proxy.alter_excluded_paths', $alter_excluded_paths_event);
+    $this->eventDispatcher->dispatch($alter_excluded_paths_event, 'stage_file_proxy.alter_excluded_paths');
     $excluded_paths = $alter_excluded_paths_event->getExcludedPaths();
     foreach ($excluded_paths as $excluded_path) {
       if (strpos($request_path, $excluded_path) !== FALSE) {
diff --git a/src/Form/SettingsForm.php b/src/Form/SettingsForm.php
index 8c125e777910b74d403d3ec76fcef010bd367019..42f8c0cdfc1aa1d573dad96de1a266b7b15fafb7 100644
--- a/src/Form/SettingsForm.php
+++ b/src/Form/SettingsForm.php
@@ -34,7 +34,7 @@ class SettingsForm extends ConfigFormBase {
   public static function create(ContainerInterface $container) {
     return new static(
       $container->get('config.factory'),
-      $container->get('site.path')
+      $container->getParameter('site.path')
     );
   }
 
diff --git a/stage_file_proxy.drush.services.yml b/stage_file_proxy.drush.services.yml
index 54aaad9c220c05c4b220d3a360cfd083ccde3f88..390579c1ddd036a18f598cea23e64107db63986b 100644
--- a/stage_file_proxy.drush.services.yml
+++ b/stage_file_proxy.drush.services.yml
@@ -6,6 +6,6 @@ services:
       - '@database'
       - '@stage_file_proxy.fetch_manager'
       - '@logger.channel.stage_file_proxy'
-      - '@app.root'
+      - '%app.root%'
     tags:
       -  { name: drush.command }
diff --git a/stage_file_proxy.info.yml b/stage_file_proxy.info.yml
index 36d5ae8cdc31d86a4f5e212d9648e6a9b96436df..ee84ad5054025ba8492df8adc639d094fa026dbc 100644
--- a/stage_file_proxy.info.yml
+++ b/stage_file_proxy.info.yml
@@ -3,6 +3,4 @@ type: module
 description: 'Proxies files from production server so you do not have to transfer them manually'
 package: Development
 configure: stage_file_proxy.admin_form
-core_version_requirement: ^8.7.7 || ^9
-dependencies:
-  - drupal:system (>=8.7.7)
+core_version_requirement: ^9 || ^10
diff --git a/tests/src/Functional/SettingsFormTest.php b/tests/src/Functional/SettingsFormTest.php
index 505aa1af2750141a68b2a187dcc4e7a1efeff2af..361b28ccc82bd134f148a57b87fec5f895aa4e12 100644
--- a/tests/src/Functional/SettingsFormTest.php
+++ b/tests/src/Functional/SettingsFormTest.php
@@ -29,7 +29,7 @@ class SettingsFormTest extends BrowserTestBase {
   /**
    * {@inheritdoc}
    */
-  protected function setUp() {
+  protected function setUp(): void {
     parent::setUp();
 
     $this->adminUser = $this->drupalCreateUser(['administer stage_file_proxy settings']);
@@ -48,14 +48,16 @@ class SettingsFormTest extends BrowserTestBase {
       // Test with adding a slash.
       'origin' => $testOrigin . '/',
     ];
-    $this->drupalPostForm($settings_path, $edit, 'Save configuration');
+
+    $this->drupalGet($settings_path);
+    $this->submitForm($edit, 'Save configuration');
 
     // Test if the form was saved without error.
-    $this->assertText('Your settings have been saved.');
+    $this->assertSession()->pageTextContains('Your settings have been saved.');
 
     // Test if the stored value has the trailing slash removed.
     $newOrigin = $this->config('stage_file_proxy.settings')->get('origin');
-    $this->assertIdentical($newOrigin, $testOrigin);
+    $this->assertSame($newOrigin, $testOrigin);
   }
 
 }
diff --git a/tests/src/Kernel/FetchManagerTest.php b/tests/src/Kernel/FetchManagerTest.php
index c93501560b7ba1f6b33d9e26a2a46f1209c8ddf6..1fdfa0d8cc3eefe39a6a0f12140d3510d9b671ec 100644
--- a/tests/src/Kernel/FetchManagerTest.php
+++ b/tests/src/Kernel/FetchManagerTest.php
@@ -62,7 +62,7 @@ class FetchManagerTest extends KernelTestBase {
    *
    * Create new fetchManager object.
    */
-  public function setUp() {
+  public function setUp(): void {
     parent::setUp();
 
     $this->fileSystem = $this->container->get('file_system');
@@ -88,7 +88,7 @@ class FetchManagerTest extends KernelTestBase {
    * Once test method has finished running, whether it succeeded or failed,
    * tearDown() will be invoked. Unset the $fetchManager object.
    */
-  public function tearDown() {
+  public function tearDown(): void {
     unset($this->fetchManager);
   }
 
